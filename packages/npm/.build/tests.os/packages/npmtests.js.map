{"version":3,"file":"/packages/npm:tests.js","sources":["npm/index.js","npm/test.js"],"names":[],"mappings":";;;;;;;;AAAA,0C;;AAEA,uC;AACA,uC;AACA,gB;AACA,E;;AAEA,sC;AACA,4B;AACA,mB;AACA,c;;AAEA,yB;AACA,uB;AACA,gC;AACA,iB;AACA,mB;AACA,yB;AACA,oB;AACA,U;;AAEA,wB;AACA,iC;AACA,uB;AACA,gB;AACA,+B;AACA,0B;AACA,S;AACA,O;AACA,K;AACA,Q;;AAEA,gB;AACA,c;AACA,E;AACA,iB;AACA,E;;;;;;;;;;;;;;;;;;;ACpCA,wD;AACA,2C;AACA,2B;AACA,wB;AACA,W;AACA,K;;AAEA,mC;AACA,iC;AACA,G;;AAEA,yD;AACA,E;AACA,2C;AACA,2B;AACA,kD;AACA,W;AACA,K;;AAEA,uC;AACA,qC;AACA,G","sourcesContent":["var Future = Npm.require('fibers/future');\n\nMeteor.require = function(moduleName) {\n  var module = Npm.require(moduleName);\n  return module;\n};\n\nMeteor.sync = function(asynFunction) {\n  var future = new Future();\n  var sent = false;\n  var payload;\n\n  setTimeout(function() {\n    asynFunction(done);\n    function done(err, result) {\n      if(!sent) {\n        payload = {\n          result: result,\n          error: err\n        };\n\n        if(future.ret) {\n          //for 0.6.4.1 and older\n          future.ret();\n        } else {\n          //for 0.6.5 and newer\n          future.return();\n        }\n      }\n    }\n  }, 0);\n\n  future.wait();\n  sent = true;\n  \n  return payload;\n};\n","Tinytest.add('Meteor.sync with done()', function(test) {\n  var output = Meteor.sync(function(done) {\n    setTimeout(function() {\n      done(null, 10001);\n    }, 10);\n  });\n\n  test.equal(output.result, 10001);\n  test.equal(output.error, null);\n});\n\nTinytest.add('Meteor.sync with error()', function(test) {\n  \n  var output = Meteor.sync(function(done) {\n    setTimeout(function() {\n      done({message: 'error-message', code: 402});\n    }, 10);\n  });\n\n  test.equal(output.result, undefined);\n  test.equal(output.error.code, 402);\n});"]}